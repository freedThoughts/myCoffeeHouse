Start application :- fire command from root directory
					mvn clean install -- to generate executable .jar file
					mvn spring-boot:run   -- to run the application
#################################################################################
Sample Data are created. Please have a look on \myCoffeeHouse\src\main\java\ig\assignment\repository.inventary.java file for details.
Sample Customer with name :- "Prakash", "Manish"
Sample CoffeeType with name :- "Latte", "Cappuccino"
Sample Order with orderId :- ORDER-1001
#####################################################################################################
Get customer details by customerName :-
Fire GET request with uri :- http://localhost:8080/IG/coffeeHouseController/customerByName/Prakash
							http://localhost:8080/IG/coffeeHouseController/customerByName/Manish
#############################################################################################################
Get customer details by customerPhonenumber :-
Fire GET request with uri :- http://localhost:8080/IG/coffeeHouseController/customerByPhoneNumber/12345
							http://localhost:8080/IG/coffeeHouseController/customerByPhoneNumber/987654
####################################################################################################################
Get CoffeeType details by coffeeTypeName
fire GET request with uri :- http://localhost:8080/IG/coffeeHouseController/coffeeTypeByName/Latte
							http://localhost:8080/IG/coffeeHouseController/coffeeTypeByName/Cappuccino
########################################################################################################################
Get Order details by orderId
fire GET request with uri :- http://localhost:8080/IG/coffeeHouseController/orderByOrderId/ORDER-1001		
##########################################################################################################################		
Get Receipt by orderId
fire GET request with uri :- http://localhost:8080/IG/coffeeHouseController/receiptByOrderId/ORDER-1001
#############################################################################################################################
Get Receipt by customerId
fire GET request with uri :- http://localhost:8080/IG/coffeeHouseController/receiptByCustomerId/100001 		
#############################################################################################################################
Generate report
fire GET Request with uri :- http://localhost:8080/IG/coffeeHouseController/generateReport	
#############################################################################################################################





Lets create new customer
fire POST request with uri :- http://localhost:8080/IG/coffeeHouseController/addCustomer
JSON body :-

{
    "customerId": 100011,
    "customerName": "myCustomer001",
    "phoneNumber": 258369
}

-- We can verfify the customer created by the location sent in headers by above POST request
#################################################################################################################################
Create new CoffeeType
fire POST request wit uri :- http://localhost:8080/IG/coffeeHouseController/addCoffeeType
JSON body :- 

{
    "coffeeName": "myCoffeeType",
    "totalServing": 25,
    "costPerUnit": 100
}

-- we can verfify the coffeeType created by the location sent in headers by above POST request
########################################################################################################################################
Create an Order
fire POST request with uri :- http://localhost:8080/IG/coffeeHouseController/addOrder
JSON body :-

{
    "customerId": 100011,
    "orders": [
        {
            "coffeeName": "Cappuccino",
            "quantities": 3
        },
        {
            "coffeeName": "Latte",
            "quantities": 2
        },
        {
            "coffeeName": "myCoffeeType",
            "quantities": 5
        }
    ]
}

-- we can verfify the order created by the location sent in headers by above POST request
Note : Order_id is autoGenerated if not provided in request.

-- We can generate receipt by firing GET request with orderId or CustomerId. Steps to generate receipt, are mentioned above.
-- We can generate report. Steps to generate report, are mentioned above.
####################################################################################################################################

TODO :-
1. We can use JPA for data persistence. But as per Rules of the game - "Donâ€™t bother about using any database. InMemory storage should be sufficient, using
appropriate data structures.", I am using local data structure to persist the data.
2. We can use Cache to optimize performance when any method is being called repeatedly.
3. We can add REST security for authentication.
4. Still we need to make modification based on different senarios, which may encounter in real world practice. 